<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on Marginitor&#39;s Shelter In Silence</title>
    <link>https://marginitor.github.io/tags/linux/</link>
    <description>Recent content in Linux on Marginitor&#39;s Shelter In Silence</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>Copyright © 2008–2019, Steve Francia and the Hugo Authors; all rights reserved.</copyright>
    <lastBuildDate>Sat, 11 Nov 2023 10:38:33 +0000</lastBuildDate><atom:link href="https://marginitor.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[操作系统] Linux 0.11 中inline关键字的作用</title>
      <link>https://marginitor.github.io/blog/computer_science/operating_system/linux_0_11%E4%B8%ADinline%E5%85%B3%E9%94%AE%E5%AD%97%E7%9A%84%E4%BD%9C%E7%94%A8@2023-11-11/</link>
      <pubDate>Sat, 11 Nov 2023 10:38:33 +0000</pubDate>
      
      <guid>https://marginitor.github.io/blog/computer_science/operating_system/linux_0_11%E4%B8%ADinline%E5%85%B3%E9%94%AE%E5%AD%97%E7%9A%84%E4%BD%9C%E7%94%A8@2023-11-11/</guid>
      <description>以进程0创建进程1的过程为例，看看inline有什么特别的用处。
I. 从栈的角度看函数调用的过程 1.1 进程的栈的布局 1.2 函数调用的压栈 1.3 函数调用的复原 II. inline关键字的作用 2.1 inline的常规用法 2.2 Linux 0.11 中特殊的函数调用方法 2.3 inline的特殊用法 </description>
    </item>
    
  </channel>
</rss>
